// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ProtonMail/export-tool/internal/mail (interfaces: StageErrorReporter)

// Package mail is a generated GoMock package.
package mail

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStageErrorReporter is a mock of StageErrorReporter interface.
type MockStageErrorReporter struct {
	ctrl     *gomock.Controller
	recorder *MockStageErrorReporterMockRecorder
}

// MockStageErrorReporterMockRecorder is the mock recorder for MockStageErrorReporter.
type MockStageErrorReporterMockRecorder struct {
	mock *MockStageErrorReporter
}

// NewMockStageErrorReporter creates a new mock instance.
func NewMockStageErrorReporter(ctrl *gomock.Controller) *MockStageErrorReporter {
	mock := &MockStageErrorReporter{ctrl: ctrl}
	mock.recorder = &MockStageErrorReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStageErrorReporter) EXPECT() *MockStageErrorReporterMockRecorder {
	return m.recorder
}

// ReportStageError mocks base method.
func (m *MockStageErrorReporter) ReportStageError(arg0 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReportStageError", arg0)
}

// ReportStageError indicates an expected call of ReportStageError.
func (mr *MockStageErrorReporterMockRecorder) ReportStageError(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportStageError", reflect.TypeOf((*MockStageErrorReporter)(nil).ReportStageError), arg0)
}
