// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ProtonMail/export-tool/internal/mail (interfaces: StageErrorReporter,MetadataFileChecker,Reporter)

// Package mail is a generated GoMock package.
package mail

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStageErrorReporter is a mock of StageErrorReporter interface.
type MockStageErrorReporter struct {
	ctrl     *gomock.Controller
	recorder *MockStageErrorReporterMockRecorder
}

// MockStageErrorReporterMockRecorder is the mock recorder for MockStageErrorReporter.
type MockStageErrorReporterMockRecorder struct {
	mock *MockStageErrorReporter
}

// NewMockStageErrorReporter creates a new mock instance.
func NewMockStageErrorReporter(ctrl *gomock.Controller) *MockStageErrorReporter {
	mock := &MockStageErrorReporter{ctrl: ctrl}
	mock.recorder = &MockStageErrorReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStageErrorReporter) EXPECT() *MockStageErrorReporterMockRecorder {
	return m.recorder
}

// ReportStageError mocks base method.
func (m *MockStageErrorReporter) ReportStageError(arg0 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReportStageError", arg0)
}

// ReportStageError indicates an expected call of ReportStageError.
func (mr *MockStageErrorReporterMockRecorder) ReportStageError(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportStageError", reflect.TypeOf((*MockStageErrorReporter)(nil).ReportStageError), arg0)
}

// MockMetadataFileChecker is a mock of MetadataFileChecker interface.
type MockMetadataFileChecker struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataFileCheckerMockRecorder
}

// MockMetadataFileCheckerMockRecorder is the mock recorder for MockMetadataFileChecker.
type MockMetadataFileCheckerMockRecorder struct {
	mock *MockMetadataFileChecker
}

// NewMockMetadataFileChecker creates a new mock instance.
func NewMockMetadataFileChecker(ctrl *gomock.Controller) *MockMetadataFileChecker {
	mock := &MockMetadataFileChecker{ctrl: ctrl}
	mock.recorder = &MockMetadataFileCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataFileChecker) EXPECT() *MockMetadataFileCheckerMockRecorder {
	return m.recorder
}

// HasMessage mocks base method.
func (m *MockMetadataFileChecker) HasMessage(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasMessage", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HasMessage indicates an expected call of HasMessage.
func (mr *MockMetadataFileCheckerMockRecorder) HasMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasMessage", reflect.TypeOf((*MockMetadataFileChecker)(nil).HasMessage), arg0)
}

// MockReporter is a mock of Reporter interface.
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter.
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance.
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// OnProgress mocks base method.
func (m *MockReporter) OnProgress(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnProgress", arg0)
}

// OnProgress indicates an expected call of OnProgress.
func (mr *MockReporterMockRecorder) OnProgress(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnProgress", reflect.TypeOf((*MockReporter)(nil).OnProgress), arg0)
}

// SetMessageDownloaded mocks base method.
func (m *MockReporter) SetMessageDownloaded(arg0 uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMessageDownloaded", arg0)
}

// SetMessageDownloaded indicates an expected call of SetMessageDownloaded.
func (mr *MockReporterMockRecorder) SetMessageDownloaded(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMessageDownloaded", reflect.TypeOf((*MockReporter)(nil).SetMessageDownloaded), arg0)
}

// SetMessageTotal mocks base method.
func (m *MockReporter) SetMessageTotal(arg0 uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMessageTotal", arg0)
}

// SetMessageTotal indicates an expected call of SetMessageTotal.
func (mr *MockReporterMockRecorder) SetMessageTotal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMessageTotal", reflect.TypeOf((*MockReporter)(nil).SetMessageTotal), arg0)
}
