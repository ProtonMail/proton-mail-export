// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ProtonMail/export-tool/internal/mail (interfaces: StageErrorReporter,MetadataFileChecker,Reporter)
//
// Generated by this command:
//
//	mockgen -self_package github.com/ProtonMail/export-tool/internal/mail -package mail github.com/ProtonMail/export-tool/internal/mail StageErrorReporter,MetadataFileChecker,Reporter
//

// Package mail is a generated GoMock package.
package mail

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStageErrorReporter is a mock of StageErrorReporter interface.
type MockStageErrorReporter struct {
	ctrl     *gomock.Controller
	recorder *MockStageErrorReporterMockRecorder
	isgomock struct{}
}

// MockStageErrorReporterMockRecorder is the mock recorder for MockStageErrorReporter.
type MockStageErrorReporterMockRecorder struct {
	mock *MockStageErrorReporter
}

// NewMockStageErrorReporter creates a new mock instance.
func NewMockStageErrorReporter(ctrl *gomock.Controller) *MockStageErrorReporter {
	mock := &MockStageErrorReporter{ctrl: ctrl}
	mock.recorder = &MockStageErrorReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStageErrorReporter) EXPECT() *MockStageErrorReporterMockRecorder {
	return m.recorder
}

// ReportStageError mocks base method.
func (m *MockStageErrorReporter) ReportStageError(err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReportStageError", err)
}

// ReportStageError indicates an expected call of ReportStageError.
func (mr *MockStageErrorReporterMockRecorder) ReportStageError(err any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportStageError", reflect.TypeOf((*MockStageErrorReporter)(nil).ReportStageError), err)
}

// MockMetadataFileChecker is a mock of MetadataFileChecker interface.
type MockMetadataFileChecker struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataFileCheckerMockRecorder
	isgomock struct{}
}

// MockMetadataFileCheckerMockRecorder is the mock recorder for MockMetadataFileChecker.
type MockMetadataFileCheckerMockRecorder struct {
	mock *MockMetadataFileChecker
}

// NewMockMetadataFileChecker creates a new mock instance.
func NewMockMetadataFileChecker(ctrl *gomock.Controller) *MockMetadataFileChecker {
	mock := &MockMetadataFileChecker{ctrl: ctrl}
	mock.recorder = &MockMetadataFileCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataFileChecker) EXPECT() *MockMetadataFileCheckerMockRecorder {
	return m.recorder
}

// HasMessage mocks base method.
func (m *MockMetadataFileChecker) HasMessage(msgID string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasMessage", msgID)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HasMessage indicates an expected call of HasMessage.
func (mr *MockMetadataFileCheckerMockRecorder) HasMessage(msgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasMessage", reflect.TypeOf((*MockMetadataFileChecker)(nil).HasMessage), msgID)
}

// MockReporter is a mock of Reporter interface.
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
	isgomock struct{}
}

// MockReporterMockRecorder is the mock recorder for MockReporter.
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance.
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// OnProgress mocks base method.
func (m *MockReporter) OnProgress(delta int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnProgress", delta)
}

// OnProgress indicates an expected call of OnProgress.
func (mr *MockReporterMockRecorder) OnProgress(delta any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnProgress", reflect.TypeOf((*MockReporter)(nil).OnProgress), delta)
}

// SetMessageProcessed mocks base method.
func (m *MockReporter) SetMessageProcessed(total uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMessageProcessed", total)
}

// SetMessageProcessed indicates an expected call of SetMessageProcessed.
func (mr *MockReporterMockRecorder) SetMessageProcessed(total any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMessageProcessed", reflect.TypeOf((*MockReporter)(nil).SetMessageProcessed), total)
}

// SetMessageTotal mocks base method.
func (m *MockReporter) SetMessageTotal(total uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMessageTotal", total)
}

// SetMessageTotal indicates an expected call of SetMessageTotal.
func (mr *MockReporterMockRecorder) SetMessageTotal(total any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMessageTotal", reflect.TypeOf((*MockReporter)(nil).SetMessageTotal), total)
}
