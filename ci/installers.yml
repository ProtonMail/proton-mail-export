---

sign-and-pack-darwin:
  stage: installer
  needs: ["build-darwin-universal"]
  extends:
    - .nexus-stage
    - .nexus-cache-darwin
  variables:
    SIGN_DIR: "$CI_PROJECT_DIR/signdir"
    ARCHIVE_PATH: "$CMAKE_INSTALL_DIR_MACOS_UNIVERSAL/$ARCHIVE_NAME_MACOS"
    PACKGE_PATH: "${DEPLOY_DIR}/${ET_BIN_NAME}-${ARCHIVE_NAME_MACOS}"
  script:
    # Assuming archive contains single .app bundle
    - mkdir "$SIGN_DIR" && unzip "$ARCHIVE_PATH" -d "$SIGN_DIR"
    - ./scripts/sign_and_pack_darwin.sh "$SIGN_DIR" "$PACKGE_PATH"
  artifacts:
    paths:
      - $PACKGE_PATH
    when: always
    expire_in: 4 hrs
  tags:
    - mac-prg-release-m1

sign-and-pack-windows:
  stage: installer
  needs: ["build-windows"]
  variables:
    FF_USE_FASTZIP: "true"
    TRANSFER_METER_FREQUENCY: "2s"
    ARTIFACT_COMPRESSION_LEVEL: "fastest"
    CACHE_COMPRESSION_LEVEL: "fastest"
    SIGN_DIR: "$CI_PROJECT_DIR/signdir"
    ARCHIVE_PATH: "$CMAKE_INSTALL_DIR/bin/$ARCHIVE_NAME_WINDOWS"
    PACKGE_PATH: "${DEPLOY_DIR}/${ET_BIN_NAME}-${ARCHIVE_NAME_WINDOWS}"
  script:
    - mkdir "$SIGN_DIR" && unzip "$ARCHIVE_PATH" -d "$SIGN_DIR"
    - ./scripts/sign_and_pack_windows.sh "$SIGN_DIR" "${PACKGE_PATH}"
  timeout: 3h
  artifacts:
    paths:
      - $PACKGE_PATH
    when: always
    expire_in: 4 hrs
  tags:
    - windows-bridge-signing

# Need to sing split the job because windows signing machine is protected to
# upload files only via artifacts. This (linux docker) job is created just to
# upload signed files.
stage-windows:
  stage: installer
  needs: ["sign-and-pack-windows"]
  extends:
    - .nexus-stage
    - .nexus-cache-linux
  script:
    - echo "Just upload artifact to nexus"

stage-linux:
  stage: installer
  needs: ["build-linux"]
  extends:
    - .nexus-stage
    - .nexus-cache-linux
  script:
    - mkdir -p $DEPLOY_DIR
    - cp $CMAKE_INSTALL_DIR/$ARCHIVE_NAME_LINUX $DEPLOY_DIR/${ET_BIN_NAME}-${ARCHIVE_NAME_LINUX}
    - cp $CMAKE_INSTALL_DIR/meta/version.json $DEPLOY_DIR/version.json
