image: gitlab.protontech.ch:4567/go/bridge-internal:test-go1.21

variables:
  GOPRIVATE: gitlab.protontech.ch
  GOMAXPROCS: $(( ${CI_TAG_CPU} / 2 ))
  CMAKE_BUILD_DIR: $CI_PROJECT_DIR/cmake-build-release
  CMAKE_INSTALL_DIR: $CI_PROJECT_DIR/cmake-install-release
  CMAKE_BUILD_CONFIG: "Release"
  # GIT_SUBMODULE_STRATEGY: recursive

# ENV
.env-windows:
  variables:
    VCPKG_DEFAULT_BINARY_CACHE: ${CI_PROJECT_DIR}/.cache
  before_script:
    - New-Item -ItemType Directory -Path ${VCPKG_DEFAULT_BINARY_CACHE} -Force
    - $env:Path = "C:\\\\CMake\\bin;" + $env:Path
  cache:
  cache:
    key: win-vcpkg
    paths:
      - .cache
    when: 'always'
  tags:
    - windows-export

.env-darwin:
  variables:
    VCPKG_DEFAULT_BINARY_CACHE: ${CI_PROJECT_DIR}/.cache
  before_script:
    - export PATH=/usr/local/bin:$PATH
    - export PATH=/usr/local/opt/git/bin:$PATH
    - export PATH=/usr/local/opt/make/libexec/gnubin:$PATH
    - export PATH=/usr/local/opt/gnu-sed/libexec/gnubin:$PATH
    - export GOROOT=~/local/opt/go@1.20
    - export PATH="${GOROOT}/bin:$PATH"
    - export GOPATH=~/go1.20
    - export PATH="${GOPATH}/bin:$PATH"
    - export QT6DIR=/opt/Qt/6.3.2/macos
    - export PATH="${QT6DIR}/bin:$PATH"
    - uname -a
  cache:
    key: darwin-vcpkg
    paths:
      - .cache
    when: 'always'
  tags:
    - macos-m1-bridge

.env-linux-build:
  variables:
    VCPKG_DEFAULT_BINARY_CACHE: ${CI_PROJECT_DIR}/.cache
  cache:
    key: linux-vcpkg
    paths:
      - .cache
    when: 'always'
  before_script:
    - mkdir -p .cache/bin
    - export BRIDGE_SYNC_FORCE_MINIMUM_SPEC=1
    - export PATH=$(pwd)/.cache/bin:$PATH
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - export PATH=$PATH:$QT6DIR/bin
  tags:
    - large


stages:
  - test
  - build

.script-config-git:
  script:
    - git config --global url.https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}.insteadOf https://${CI_SERVER_HOST}
    - git submodule update --init --recursive

.script-config-cmake-win:
  script:
    - $(Get-Command cmake).Source
    - cmake
       -S . -B "$CMAKE_BUILD_DIR"
       -G "Visual Studio 17 2022"
       -DCMAKE_GENERATOR_PLATFORM=x64
       -DCMAKE_CL_64=1
       -A "x64"
       -DMINGW_CACHE_PATH="$pwd\.cache"
       -DVCPKG_HOST_TRIPLET=x64-windows-static
       -DVCPKG_TARGET_TRIPLET=x64-windows-static
       -DCMAKE_INSTALL_PREFIX="$CMAKE_INSTALL_DIR"

.script-config-cmake-unix:
  script:
     - cmake -S . -B $CMAKE_BUILD_DIR -G "Ninja Multi-Config" -DCMAKE_INSTALL_PREFIX="$CMAKE_INSTALL_DIR"

.script-config-cmake-macos-arm64:
  script:
     - cmake -S . -B $CMAKE_BUILD_DIR -G "Ninja Multi-Config" -DCMAKE_INSTALL_PREFIX="$CMAKE_INSTALL_DIR" -DCMAKE_OSX_ARCHITECTURES=arm64

.script-config-cmake-macos-x86_64:
  script:
     - cmake -S . -B $CMAKE_BUILD_DIR -G "Ninja Multi-Config" -DCMAKE_INSTALL_PREFIX="$CMAKE_INSTALL_DIR" -DCMAKE_OSX_ARCHITECTURES=x86_64

.script-install:
  script:
     - cmake --install $CMAKE_BUILD_DIR --config $CMAKE_BUILD_CONFIG

.script-build:
  script:
    - cmake --build $CMAKE_BUILD_DIR --config $CMAKE_BUILD_CONFIG

.script-test:
  extends:
    - .script-build
  script:
    - !reference [.script-build, script]
    - ctest --build-config $CMAKE_BUILD_CONFIG --test-dir $CMAKE_BUILD_DIR -V

lint:
  tags:
    - medium
  script:
    - !reference [.script-config-git, script]
    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
    - !reference [.script-config-cmake-unix, script]
    - cmake --build $CMAKE_BUILD_DIR --config $CMAKE_BUILD_CONFIG -t go-lib-lint
    - cmake --build $CMAKE_BUILD_DIR --config $CMAKE_BUILD_CONFIG -t clang-format-check

build-linux:
  stage: build
  extends:
    - .env-linux-build
  script:
    - !reference [.script-config-git, script]
    - !reference [.script-config-cmake-unix, script]
    - !reference [.script-test, script]
    - !reference [.script-install, script]
  artifacts:
    paths:
      - $CMAKE_INSTALL_DIR/bin
    when: always

#build-darwin-arm64:
#  stage: build
#  extends:
#    - .env-darwin
#  script:
#    - !reference [.script-config-git, script]
#    - !reference [.script-config-cmake-macos-amr64, script]
#    - !reference [.script-test, script]
#    - !reference [.script-install, script]
#  artifacts:
#    paths:
#      - $CMAKE_INSTALL_DIR/bin
#    when: always

#build-darwin-x86_64:
#  stage: build
#  extends:
#    - .env-darwin
#  script:
#    - !reference [.script-config-git, script]
#    - !reference [.script-config-cmake-unix-x86_64, script]
#    - !reference [.script-test, script]
#    - !reference [.script-install, script]
#  artifacts:
#    paths:
#      - $CMAKE_INSTALL_DIR/bin
#    when: always


#build-windows:
#  stage: build
#  extends:
#    - .env-windows
#  script:
#    - !reference [.script-config-git, script]
#    - !reference [.script-config-cmake-win, script]
#    - !reference [.script-test, script]
#    - !reference [.script-install, script]
#  artifacts:
#    paths:
#      - $CMAKE_INSTALL_DIR/bin
#    when: always
